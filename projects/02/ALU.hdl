// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the output bits:
 * zr = (out == 0, 1, 0)
 * ng = (out < 0,  1, 0)
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not
CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute (out = x + y) or (out = x & y)?
        no; // negate the out output?
    OUT 
        out[16], // 16-bit output
        zr,      // (out == 0, 1, 0)
        ng;      // (out < 0,  1, 0)

    PARTS:
    // nx&zx    zx&zy
    Not16(in=x,out=notx);
    Not16(in=y,out=noty);
    Mux4Way16(a=x,b=false,c=notx,d=true,sel[0]=zx,sel[1]=nx,out=tempx);
    Mux4Way16(a=y,b=false,c=noty,d=true,sel[0]=zy,sel[1]=ny,out=tempy);

    // f&no&ng ng这个地方有些难想到,可能是还不怎么会表示
    And16(a=tempx,b=tempy,out=xandy);
    Add16(a=tempx,b=tempy,out=xplusy);
    Not16(in=xandy,out=notxandy);
    Not16(in=xplusy,out=notxplusy);
    Mux4Way16(a=xandy,b=xplusy,c=notxandy,d=notxplusy,sel[0]=f,sel[1]=no,out[0..7]=lowout,out[8..15]=highout,out[15]=ng);
    Mux4Way16(a=xandy,b=xplusy,c=notxandy,d=notxplusy,sel[0]=f,sel[1]=no,out=out);

    // zr  这里只要想到了如何将多位转换成一位就OK
    Or8Way(in=lowout,out=temp1);
    Or8Way(in=highout,out=temp2);
    Or(a=temp1,b=temp2,out=notzr);
    Not(in=notzr,out=zr);    
}
